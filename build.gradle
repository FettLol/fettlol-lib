plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

configurations {
    extraLibs
}

repositories {
    maven {
        name = "Cotton"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
}

dependencies {
    // Minecraft and Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Cotton
    include modApi("io.github.cottonmc.cotton:cotton-datapack:${project.cotton_datapack_version}")
    include modApi("io.github.cottonmc.cotton:cotton-config:${project.cotton_config_version}")
    include modApi("io.github.cottonmc.cotton:cotton-logging:${project.cotton_logging_version}")
    modApi("io.github.cottonmc:Jankson-Fabric:${project.jankson_version}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
    from { configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }}

}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 16
}

publishing {
    publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
		}
    }

    repositories {
        mavenLocal()
    }
}
