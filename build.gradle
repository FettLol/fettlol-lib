plugins {
    id 'fabric-loom' version '0.12.53'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

configurations {
    extraLibs
}

dependencies {
    // Minecraft and Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
}

processResources {
    inputs.property "version", project.version
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
    from {
        configurations.extraLibs.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

publishing {
    publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
		}
    }

    repositories {
        mavenLocal()
    }
}
